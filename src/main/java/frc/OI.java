// Packages and imports, the usual stuff.

package frc;

import frc.robot.commands.*;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.Button;
import edu.wpi.first.wpilibj.buttons.JoystickButton;
import edu.wpi.first.wpilibj.command.Command;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    /* Using temporary variable names while I test things out. 
    
    ...Java is stupid. :) */

    // Method(s)

    public static boolean PrintStuff() {
        System.out.print("A MAN HAS FALLEN INTO THE RIVER IN LEGO CITY! START THE RESCUE HELICOPTER! HEY! BUILD THE HELICOPTER AND OFF TO THE RESCUE! PREPARE THE LIFELINE, LOWER THE STRETCHER AND MAKE THE RESCUE! THE NEW EMERGENCY COLLECTION FROM LEGO CITY");
        return true;
    }

    public static void Main() {
        // Define joystick under port 0
        Joystick Stick = new Joystick(0);

        // Define buttons under Joystick 0
        Button Button1 = new JoystickButton(Stick, 1);
        
        // Define commands
        Command Command1 = new Command(){
            @Override

            protected boolean isFinished() {
                PrintStuff();
                return false;
            }
        };

        // Events and all that jazz
        Button1.whenPressed(Command1);

        SmartDashboard.putData("Autonomous Command", new AutonomousCommand());
        SmartDashboard.putData("Ball", new Ball());
    }

    // WARNING: CRAPPY TEMPLATE CODE AHEAD! (Commented out for my sanity)

    // // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    // public JoystickButton button1;
    // public Joystick joystick;

    // // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    // public OI() {
    //     // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

    //     joystick = new Joystick(0);

    //     button1 = new JoystickButton(joystick, 1);
    //     button1.whileHeld(new Ball());


    //     // SmartDashboard Buttons
    //     SmartDashboard.putData("Autonomous Command", new AutonomousCommand());
    //     SmartDashboard.putData("Ball", new Ball());

    //     // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    // }

    // // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    // public Joystick getJoystick() {
    //         return joystick;
    // }


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}

